{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drunk\\\\Desktop\\\\Interview_Enneas\\\\enneas_task_react_app\\\\src\\\\components\\\\TaskComponent.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport \"./Android.css\";\nimport { useSpring, animated } from '@react-spring/web';\nimport { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAndroid } from '@fortawesome/free-brands-svg-icons';\nimport android_anim from \"../images/android_animation.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskComponent() {\n  _s();\n  const imgRef = useRef(null);\n  const restartGif = () => {\n    if (imgRef.current) {\n      // Force the browser to reload the image by changing its source\n      imgRef.current.src = android_anim;\n    }\n  };\n  const [propsSlideRightOp] = useSpring(() => ({\n    from: {\n      opacity: 0,\n      y: '-100%'\n    },\n    to: {\n      opacity: 1,\n      y: '0%'\n    },\n    delay: 200\n  }), []);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    // Call restartGif when the component mounts\n    restartGif();\n  }, []);\n  useEffect(() => {\n    // After the component is mounted, set isVisible to true\n    setIsVisible(true);\n    // Cleanup function for when the component is about to unmount\n    return () => {\n      setIsVisible(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      exit: {\n        opacity: 0,\n        transition: {\n          duration: 0.2,\n          ease: \"easeInOut\"\n        }\n      },\n      className: `container-fluid my-body ${isVisible ? 'visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        exit: {\n          opacity: 0,\n          transition: {\n            duration: 0.2,\n            ease: \"easeInOut\"\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(animated.div, {\n          style: propsSlideRightOp,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid top-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row align-items-center \",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h1 fw-light text-decoration\",\n                children: [\"Android Development \\xA0\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faAndroid,\n                  size: \"lg\",\n                  style: {\n                    color: \"#000000\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 90\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: '100%',\n          transition: {\n            duration: 0.1\n          }\n        },\n        animate: {\n          opacity: 100,\n          y: '0%',\n          transition: {\n            duration: 0.7,\n            delay: 0.2,\n            ease: \"easeInOut\"\n          }\n        },\n        exit: {\n          opacity: 0,\n          y: '100%',\n          transition: {\n            duration: 0.2,\n            ease: \"easeInOut\"\n          }\n        },\n        className: \"my-div\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imgRef,\n          src: android_anim,\n          className: \"android_animation\",\n          style: {\n            width: '90vw ',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, \"body\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskComponent, \"zHVbtc3sn2S0QF+hPNV27g7hJVY=\", false, function () {\n  return [useSpring];\n});\n_c = TaskComponent;\nexport default TaskComponent;\nvar _c;\n$RefreshReg$(_c, \"TaskComponent\");","map":{"version":3,"names":["React","Component","useSpring","animated","useState","useEffect","useRef","motion","FontAwesomeIcon","faAndroid","android_anim","jsxDEV","_jsxDEV","TaskComponent","_s","imgRef","restartGif","current","src","propsSlideRightOp","from","opacity","y","to","delay","isVisible","setIsVisible","children","div","exit","transition","duration","ease","className","style","icon","size","color","fileName","_jsxFileName","lineNumber","columnNumber","initial","animate","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Drunk/Desktop/Interview_Enneas/enneas_task_react_app/src/components/TaskComponent.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Android.css\";\r\nimport { useSpring, animated } from '@react-spring/web'\r\nimport { useState, useEffect, useRef} from 'react';\r\nimport {motion} from 'framer-motion';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAndroid } from '@fortawesome/free-brands-svg-icons';\r\nimport android_anim from \"../images/android_animation.gif\";\r\n\r\nfunction TaskComponent(){\r\n  const imgRef = useRef(null);\r\n\r\n  const restartGif = () => {\r\n    if (imgRef.current) {\r\n      // Force the browser to reload the image by changing its source\r\n      imgRef.current.src = android_anim;\r\n    }\r\n  };\r\n\r\n  const [propsSlideRightOp] = useSpring(\r\n    () => ({\r\n      from: { opacity: 0, y: '-100%' },\r\n      to: { opacity: 1 , y: '0%' },\r\n      delay: 200\r\n    }),\r\n    []\r\n  )\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Call restartGif when the component mounts\r\n    restartGif();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // After the component is mounted, set isVisible to true\r\n    setIsVisible(true);\r\n    // Cleanup function for when the component is about to unmount\r\n    return () => {\r\n      setIsVisible(false);\r\n    };\r\n  }, []);\r\n  \r\n    return (\r\n    <div> \r\n     \r\n      <motion.div exit={{opacity:0, transition: { duration:0.2, ease: \"easeInOut\" }}} className={`container-fluid my-body ${isVisible ? 'visible' : ''}`}>\r\n\r\n        <motion.div exit={{opacity:0, transition: { duration:0.2, ease: \"easeInOut\" }}}>\r\n            <animated.div style={propsSlideRightOp}>\r\n              <div className='container-fluid top-bar'>\r\n          \r\n                <div className='row align-items-center '>\r\n                  <div className='h1 fw-light text-decoration'>Android Development &nbsp;<FontAwesomeIcon icon={faAndroid} size=\"lg\" style={{color: \"#000000\",}} /></div>\r\n                </div>\r\n              </div>\r\n            </animated.div>\r\n        </motion.div>\r\n\r\n        <br/>\r\n\r\n        <motion.div key=\"body\" initial={{opacity:0, y:'100%', transition: { duration: 0.1}}} animate={{opacity:100, y:'0%', transition: { duration: 0.7, delay:0.2 , ease: \"easeInOut\"}}} exit={{opacity:0, y:'100%', transition: { duration: 0.2, ease: \"easeInOut\" }}} className=\"my-div\">\r\n          <img ref={imgRef} src={android_anim} className=\"android_animation\" style={{ width: '90vw ', height: 'auto' }}></img>\r\n        </motion.div>\r\n\r\n      </motion.div>\r\n      \r\n\r\n\r\n    </div>\r\n\r\n    );\r\n    \r\n  }\r\nexport default TaskComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}